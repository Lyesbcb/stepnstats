{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport config from \"../../config.json\";\nimport { getSecuretValueFor } from \"../secureStorage/index\";\nmodule.exports = {\n  createNft: createNft,\n  deleteNft: deleteNft,\n  uploadNft: uploadNft,\n  updateNft: updateNft,\n  getAllMyNft: getAllMyNft,\n  getByNftId: getByNftId,\n  getMaxMb: getMaxMb,\n  optimize: optimize\n};\nvar baseURL = config.baseUrl + \"/nfts\";\n\nfunction createNft(params) {\n  var token, config;\n  return _regeneratorRuntime.async(function createNft$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 2:\n          token = _context2.sent;\n          config = {\n            method: \"post\",\n            url: baseURL + \"/create\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + token\n            },\n            data: JSON.stringify(params)\n          };\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios(config).then(function _callee(response) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log(response);\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            console.log(error.response.data.message);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction updateNft(params, id) {\n  var token, config;\n  return _regeneratorRuntime.async(function updateNft$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 2:\n          token = _context6.sent;\n          config = {\n            method: \"put\",\n            url: baseURL + \"/\" + id,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + token\n            },\n            data: JSON.stringify(params)\n          };\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(axios(config).then(function _callee2(response) {\n            return _regeneratorRuntime.async(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!(response.status === 200)) {\n                      _context3.next = 4;\n                      break;\n                    }\n\n                    _context3.next = 3;\n                    return _regeneratorRuntime.awrap(response);\n\n                  case 3:\n                    return _context3.abrupt(\"return\", _context3.sent);\n\n                  case 4:\n                    _context3.next = 6;\n                    return _regeneratorRuntime.awrap(response);\n\n                  case 6:\n                    throw _context3.sent;\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function _callee3(response) {\n            return _regeneratorRuntime.async(function _callee3$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return _regeneratorRuntime.awrap(response);\n\n                  case 2:\n                    return _context4.abrupt(\"return\", _context4.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function _callee4(error) {\n            return _regeneratorRuntime.async(function _callee4$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return _regeneratorRuntime.awrap(error.message);\n\n                  case 2:\n                    throw _context5.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction uploadNft(image, realm) {\n  var token, uriParts, fileType, formData, options;\n  return _regeneratorRuntime.async(function uploadNft$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          if (image.cancelled) {\n            _context10.next = 13;\n            break;\n          }\n\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 3:\n          token = _context10.sent;\n          uriParts = image.uri.split(\".\");\n          fileType = uriParts[uriParts.length - 1];\n          formData = new FormData();\n          formData.append(\"file\", {\n            uri: image.uri,\n            name: \"photo.\" + fileType,\n            type: \"image/\" + fileType\n          });\n          formData.append(\"realm\", JSON.stringify({\n            realm: realm\n          }));\n          options = {\n            method: \"POST\",\n            body: formData,\n            headers: {\n              Accept: \"application/json\",\n              Authorization: \"Bearer \" + token,\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          };\n          _context10.next = 12;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"/upload\", options).then(function _callee5(response) {\n            return _regeneratorRuntime.async(function _callee5$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    if (!response.ok) {\n                      _context7.next = 4;\n                      break;\n                    }\n\n                    _context7.next = 3;\n                    return _regeneratorRuntime.awrap(response.json());\n\n                  case 3:\n                    return _context7.abrupt(\"return\", _context7.sent);\n\n                  case 4:\n                    _context7.next = 6;\n                    return _regeneratorRuntime.awrap(response.json());\n\n                  case 6:\n                    throw _context7.sent;\n\n                  case 7:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function _callee6(response) {\n            return _regeneratorRuntime.async(function _callee6$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return _regeneratorRuntime.awrap(response);\n\n                  case 2:\n                    return _context8.abrupt(\"return\", _context8.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function _callee7(error) {\n            return _regeneratorRuntime.async(function _callee7$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return _regeneratorRuntime.awrap(error.message);\n\n                  case 2:\n                    throw _context9.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 12:\n          return _context10.abrupt(\"return\", _context10.sent);\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction deleteNft(id) {\n  var token, config;\n  return _regeneratorRuntime.async(function deleteNft$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 2:\n          token = _context12.sent;\n          config = {\n            method: \"delete\",\n            url: baseURL + \"/\" + id,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + token\n            }\n          };\n          _context12.next = 6;\n          return _regeneratorRuntime.awrap(axios(config).then(function _callee8(response) {\n            return _regeneratorRuntime.async(function _callee8$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    console.log(response.data);\n\n                  case 1:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            console.log(error.response.data.message);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getAllMyNft(page) {\n  var token, config;\n  return _regeneratorRuntime.async(function getAllMyNft$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 2:\n          token = _context14.sent;\n          config = {\n            method: \"get\",\n            url: baseURL + \"/my\",\n            params: {\n              page: 1\n            },\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + token\n            }\n          };\n          _context14.next = 6;\n          return _regeneratorRuntime.awrap(axios(config).then(function _callee9(response) {\n            return _regeneratorRuntime.async(function _callee9$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    return _context13.abrupt(\"return\", response.data.rows);\n\n                  case 1:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            console.log(error.response.data.message);\n          }));\n\n        case 6:\n          return _context14.abrupt(\"return\", _context14.sent);\n\n        case 7:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getByNftId(nftId) {\n  var token, config;\n  return _regeneratorRuntime.async(function getByNftId$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return _regeneratorRuntime.awrap(getSecuretValueFor(\"token\"));\n\n        case 2:\n          token = _context16.sent;\n          config = {\n            method: \"get\",\n            url: baseURL + \"/nftId\",\n            params: {\n              nftId: nftId\n            },\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + token\n            }\n          };\n          _context16.next = 6;\n          return _regeneratorRuntime.awrap(axios(config).then(function _callee10(response) {\n            return _regeneratorRuntime.async(function _callee10$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    return _context15.abrupt(\"return\", response.data);\n\n                  case 1:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            throw error.response.data.message;\n          }));\n\n        case 6:\n          return _context16.abrupt(\"return\", _context16.sent);\n\n        case 7:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar luckEnergy = [{\n  energy: 3,\n  luck: 8\n}, {\n  energy: 5,\n  luck: 20\n}, {\n  energy: 8,\n  luck: 28\n}, {\n  energy: 12,\n  luck: 56\n}, {\n  energy: 16,\n  luck: 148\n}, {\n  energy: 20,\n  luck: 286\n}, {\n  energy: 21,\n  luck: 805\n}, {\n  energy: 23,\n  luck: 1749\n}, {\n  energy: 24,\n  luck: 2074\n}, {\n  energy: 25,\n  luck: 3000\n}];\n\nfunction getClosestEnergyLuck(energy, luck) {\n  var closestEnergy;\n  var closestLuck;\n\n  for (var i = 0; i < luckEnergy.length; i++) {\n    if (luckEnergy[i].energy <= energy) {\n      closestEnergy = i;\n    }\n  }\n\n  for (var y = 0; y < luckEnergy.length; y++) {\n    if (luckEnergy[y].luck <= luck) {\n      closestLuck = y;\n    }\n  }\n\n  return Math.min(closestEnergy, closestLuck);\n}\n\nfunction socketValue(socket, value) {\n  var finalValue = value;\n\n  if (socket.includes(\"Lvl2\")) {\n    finalValue = value * 1.1;\n  }\n\n  if (socket.includes(\"Lvl3\")) {\n    finalValue = value * 1.2;\n  }\n\n  if (socket.includes(\"Lvl4\")) {\n    finalValue = value * 1.3;\n  }\n\n  if (socket.includes(\"Lvl5\")) {\n    finalValue = value * 1.5;\n  }\n\n  return finalValue;\n}\n\nfunction gemValue(gem, socket, value) {\n  var finalValue = 0;\n\n  if (gem.includes(\"Lvl1\")) {\n    finalValue += value * socketValue(socket, 1.05);\n    finalValue += socketValue(socket, 2);\n  }\n\n  if (gem.includes(\"Lvl2\")) {\n    finalValue += value * socketValue(socket, 1.7);\n    finalValue += socketValue(socket, 8);\n  }\n\n  if (gem.includes(\"Lvl3\")) {\n    finalValue += value * socketValue(socket, 2.2);\n    finalValue += socketValue(socket, 25);\n  }\n\n  if (gem.includes(\"Lvl4\")) {\n    finalValue += value * socketValue(socket, 6);\n    finalValue += socketValue(socket, 72);\n  }\n\n  if (gem.includes(\"Lvl5\")) {\n    finalValue += value * socketValue(socket, 14);\n    finalValue += socketValue(socket, 200);\n  }\n\n  if (gem.includes(\"Lvl6\")) {\n    finalValue += value * socketValue(socket, 43);\n    finalValue += socketValue(socket, 400);\n  }\n\n  if (gem.includes(\"Lvl7\")) {\n    finalValue += value * socketValue(socket, 1.7);\n    finalValue += socketValue(socket, 8);\n  }\n\n  if (gem.includes(\"Lvl8\")) {\n    finalValue += value * socketValue(socket, 1.7);\n    finalValue += socketValue(socket, 8);\n  }\n\n  if (gem.includes(\"Lvl9\")) {\n    finalValue += value * socketValue(socket, 1.7);\n    finalValue += socketValue(socket, 8);\n  }\n\n  return Number(finalValue.toFixed(1));\n}\n\nfunction optimize(myNft) {\n  var points, efficiency, luck, comfort, resilience, gemEfficiency, gemLuck, gemComfort, gemResilience, i, maxLuck, average, diff, params;\n  return _regeneratorRuntime.async(function optimize$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          console.log(myNft);\n          points = 0;\n          efficiency = 0;\n          luck = 0;\n          comfort = 0;\n          resilience = 0;\n          gemEfficiency = 0;\n          gemLuck = 0;\n          gemComfort = 0;\n          gemResilience = 0;\n\n          for (i = 1; i < 5; i++) {\n            if (myNft[\"socket\" + i].includes(\"efficiency\")) {\n              gemEfficiency += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.efficiencyBase);\n            }\n\n            if (myNft[\"socket\" + i].includes(\"luck\")) {\n              gemLuck += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.luckBase);\n            }\n\n            if (myNft[\"socket\" + i].includes(\"comfort\")) {\n              gemComfort += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.comfortBase);\n            }\n\n            if (myNft[\"socket\" + i].includes(\"resilience\")) {\n              gemResilience += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.resilienceBase);\n            }\n          }\n\n          if (myNft.quality === \"Common\") {\n            points = myNft.lvl * 4;\n            comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 10);\n            points += Number(myNft.comfortBase.toFixed(0)) - 10;\n          }\n\n          if (myNft.quality === \"Uncommon\") {\n            points = myNft.lvl * 6;\n            comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\n            points += Number(myNft.comfortBase.toFixed(0)) - 20;\n          }\n\n          if (myNft.quality === \"Rare\") {\n            points = myNft.lvl * 8;\n            comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\n            points += Number(myNft.comfortBase.toFixed(0)) - 20;\n          }\n\n          if (myNft.quality === \"Epic\") {\n            points = myNft.lvl * 10;\n            comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\n            points += Number(myNft.comfortBase.toFixed(0)) - 20;\n          }\n\n          if (myNft.strategy === \"GST\") {\n            resilience += Number((points / 6).toFixed(0));\n            points -= resilience;\n            efficiency += points;\n            points -= efficiency;\n          }\n\n          if (myNft.strategy === \"MYSTERY BOX\") {\n            maxLuck = gemLuck + myNft.luckBase + points;\n            average = luckEnergy[getClosestEnergyLuck(myNft.energy, maxLuck)].luck;\n\n            if (average <= gemLuck + myNft.luckBase) {} else {\n              diff = average - (gemLuck + myNft.luckBase);\n              luck += diff;\n              points -= luck;\n            }\n\n            resilience += Number((points / 6).toFixed(0));\n            points -= resilience;\n            efficiency += points;\n            points -= efficiency;\n          }\n\n          if (myNft.strategy === \"HYBRID\") {\n            resilience += Number((points / 2 / 6).toFixed(0));\n            efficiency += Number((points / 2).toFixed(0));\n            points -= resilience;\n            points -= efficiency;\n            maxLuck = gemLuck + myNft.luckBase + points;\n            average = luckEnergy[getClosestEnergyLuck(myNft.energy, maxLuck)].luck;\n\n            if (average <= gemLuck + myNft.luckBase) {} else {\n              diff = average - (gemLuck + myNft.luckBase);\n              luck += diff;\n              points -= luck;\n            }\n\n            resilience += Number((points / 6).toFixed(0));\n            points -= resilience;\n            efficiency += points;\n            points -= efficiency;\n          }\n\n          params = {\n            lvlOptimized: myNft.lvl,\n            efficiencyOptimized: Number(efficiency.toFixed(0)) + gemEfficiency,\n            luckOptimized: Number(luck.toFixed(0)) + gemLuck,\n            comfortOptimized: Number(comfort.toFixed(0)) + gemComfort,\n            resilienceOptimized: Number(resilience.toFixed(0)) + gemResilience,\n            gem1Optimized: myNft.gem1,\n            gem2Optimized: myNft.gem2,\n            gem3Optimized: myNft.gem3,\n            gem4Optimized: myNft.gem4,\n            id: myNft.id\n          };\n          _context17.next = 21;\n          return _regeneratorRuntime.awrap(updateNft(params, myNft.id));\n\n        case 21:\n          return _context17.abrupt(\"return\", _context17.sent);\n\n        case 22:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getMaxMb(myNft) {\n  var points = 0;\n  var efficiency = 0;\n  var luck = 0;\n  var comfort = 0;\n  var resilience = 0;\n  var gemEfficiency = 0;\n  var gemLuck = 0;\n  var gemComfort = 0;\n  var gemResilience = 0;\n\n  if (myNft.quality === \"Common\") {\n    points = myNft.lvl * 4;\n    comfort = 10;\n    points += Number(myNft.comfortBase.toFixed(0)) - 10;\n  }\n\n  if (myNft.quality === \"Uncommon\") {\n    points = myNft.lvl * 6;\n    comfort = 20;\n    points += myNft.comfortBase - 20;\n  }\n\n  if (myNft.quality === \"Rare\") {\n    points = myNft.lvl * 8;\n    comfort = 20;\n    points += myNft.comfortBase - 20;\n  }\n\n  if (myNft.quality === \"Epic\") {\n    points = myNft.lvl * 10;\n    comfort = 20;\n    points += myNft.comfortBase - 20;\n  }\n\n  for (var i = 1; i < 5; i++) {\n    if (myNft[\"socket\" + i].includes(\"efficiency\")) {\n      gemEfficiency += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.efficiencyBase);\n    }\n\n    if (myNft[\"socket\" + i].includes(\"luck\")) {\n      gemLuck += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.luckBase);\n    }\n\n    if (myNft[\"socket\" + i].includes(\"comfort\")) {\n      gemComfort += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.comfortBase);\n    }\n\n    if (myNft[\"socket\" + i].includes(\"resilience\")) {\n      gemResilience += gemValue(myNft[\"gem\" + i], myNft[\"socket\" + i], myNft.resilienceBase);\n    }\n  }\n\n  if (myNft.strategy === \"GST\") {\n    points = 0;\n  }\n\n  if (myNft.strategy === \"HYBRID\") {\n    resilience += Number((points / 2 / 6).toFixed(0));\n    efficiency += Number((points / 2).toFixed(0));\n    points -= resilience + efficiency;\n  }\n\n  var maxLuck = gemLuck + myNft.luckBase + points;\n  return getClosestEnergyLuck(myNft.energy, maxLuck) + 1;\n}","map":{"version":3,"names":["axios","config","getSecuretValueFor","module","exports","createNft","deleteNft","uploadNft","updateNft","getAllMyNft","getByNftId","getMaxMb","optimize","baseURL","baseUrl","params","token","method","url","headers","Authorization","data","JSON","stringify","then","response","console","log","catch","error","message","id","status","image","realm","cancelled","uriParts","uri","split","fileType","length","formData","FormData","append","name","type","options","body","Accept","fetch","ok","json","page","rows","nftId","luckEnergy","energy","luck","getClosestEnergyLuck","closestEnergy","closestLuck","i","y","Math","min","socketValue","socket","value","finalValue","includes","gemValue","gem","Number","toFixed","myNft","points","efficiency","comfort","resilience","gemEfficiency","gemLuck","gemComfort","gemResilience","efficiencyBase","luckBase","comfortBase","resilienceBase","quality","lvl","abs","strategy","maxLuck","average","diff","lvlOptimized","efficiencyOptimized","luckOptimized","comfortOptimized","resilienceOptimized","gem1Optimized","gem1","gem2Optimized","gem2","gem3Optimized","gem3","gem4Optimized","gem4"],"sources":["C:/Users/lyes9/Documents/GitHub/stepnstats/stepnstats/front/services/nfts/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"../../config.json\";\r\nimport { getSecuretValueFor } from \"../secureStorage/index\";\r\n\r\nmodule.exports = {\r\n  createNft,\r\n  deleteNft,\r\n  uploadNft,\r\n  updateNft,\r\n  getAllMyNft,\r\n  getByNftId,\r\n  getMaxMb,\r\n  optimize,\r\n};\r\nconst baseURL = config.baseUrl + \"/nfts\";\r\nasync function createNft(params) {\r\n  var token = await getSecuretValueFor(\"token\");\r\n  var config = {\r\n    method: \"post\",\r\n    url: baseURL + \"/create\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: JSON.stringify(params),\r\n  };\r\n\r\n  await axios(config)\r\n    .then(async function (response) {\r\n      // Save to store\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n\r\nasync function updateNft(params, id) {\r\n  var token = await getSecuretValueFor(\"token\");\r\n  var config = {\r\n    method: \"put\",\r\n    url: baseURL + \"/\" + id,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    data: JSON.stringify(params),\r\n  };\r\n\r\n  await axios(config)\r\n    .then(async (response) => {\r\n      if (response.status === 200) {\r\n        return await response;\r\n      }\r\n      throw await response;\r\n    })\r\n    .then(async (response) => {\r\n      return await response;\r\n    })\r\n    .catch(async function (error) {\r\n      throw await error.message;\r\n    });\r\n}\r\n\r\nasync function uploadNft(image, realm) {\r\n  if (!image.cancelled) {\r\n    var token = await getSecuretValueFor(\"token\");\r\n    let uriParts = image.uri.split(\".\");\r\n    let fileType = uriParts[uriParts.length - 1];\r\n    let formData = new FormData();\r\n    formData.append(\"file\", {\r\n      uri: image.uri,\r\n      name: `photo.${fileType}`,\r\n      type: `image/${fileType}`,\r\n    });\r\n    formData.append(\"realm\", JSON.stringify({ realm }));\r\n    let options = {\r\n      method: \"POST\",\r\n      body: formData,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    // Start waiting screen\r\n    return await fetch(baseURL + \"/upload\", options)\r\n      .then(async (response) => {\r\n        if (response.ok) {\r\n          return await response.json();\r\n        }\r\n        throw await response.json();\r\n      })\r\n      .then(async (response) => {\r\n        return await response;\r\n      })\r\n      .catch(async function (error) {\r\n        throw await error.message;\r\n      });\r\n    // Stop wainting screen\r\n  }\r\n}\r\n\r\nasync function deleteNft(id) {\r\n  var token = await getSecuretValueFor(\"token\");\r\n  var config = {\r\n    method: \"delete\",\r\n    url: baseURL + \"/\" + id,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  await axios(config)\r\n    .then(async function (response) {\r\n      console.log(response.data);\r\n      // re Nft getAllMyNft to actualize\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n\r\nasync function getAllMyNft(page) {\r\n  var token = await getSecuretValueFor(\"token\");\r\n  var config = {\r\n    method: \"get\",\r\n    url: baseURL + \"/my\",\r\n    params: { page: 1 },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  return await axios(config)\r\n    .then(async function (response) {\r\n      return response.data.rows;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.response.data.message);\r\n    });\r\n}\r\n\r\nasync function getByNftId(nftId) {\r\n  var token = await getSecuretValueFor(\"token\");\r\n  var config = {\r\n    method: \"get\",\r\n    url: baseURL + \"/nftId\",\r\n    params: { nftId: nftId },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  return await axios(config)\r\n    .then(async function (response) {\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      throw error.response.data.message;\r\n    });\r\n}\r\nconst luckEnergy = [\r\n  {\r\n    energy: 3,\r\n    luck: 8,\r\n  },\r\n  {\r\n    energy: 5,\r\n    luck: 20,\r\n  },\r\n  {\r\n    energy: 8,\r\n    luck: 28,\r\n  },\r\n  {\r\n    energy: 12,\r\n    luck: 56,\r\n  },\r\n  {\r\n    energy: 16,\r\n    luck: 148,\r\n  },\r\n  {\r\n    energy: 20,\r\n    luck: 286,\r\n  },\r\n  {\r\n    energy: 21,\r\n    luck: 805,\r\n  },\r\n  {\r\n    energy: 23,\r\n    luck: 1749,\r\n  },\r\n  {\r\n    energy: 24,\r\n    luck: 2074,\r\n  },\r\n  {\r\n    energy: 25,\r\n    luck: 3000,\r\n  },\r\n];\r\n\r\nfunction getClosestEnergyLuck(energy, luck) {\r\n  var closestEnergy;\r\n  var closestLuck;\r\n  for (var i = 0; i < luckEnergy.length; i++) {\r\n    if (luckEnergy[i].energy <= energy) {\r\n      closestEnergy = i;\r\n    }\r\n  }\r\n  for (var y = 0; y < luckEnergy.length; y++) {\r\n    if (luckEnergy[y].luck <= luck) {\r\n      closestLuck = y;\r\n    }\r\n  }\r\n  return Math.min(closestEnergy, closestLuck);\r\n}\r\n\r\nfunction socketValue(socket, value) {\r\n  var finalValue = value;\r\n  if (socket.includes(\"Lvl2\")) {\r\n    finalValue = value * 1.1;\r\n  }\r\n  if (socket.includes(\"Lvl3\")) {\r\n    finalValue = value * 1.2;\r\n  }\r\n  if (socket.includes(\"Lvl4\")) {\r\n    finalValue = value * 1.3;\r\n  }\r\n  if (socket.includes(\"Lvl5\")) {\r\n    finalValue = value * 1.5;\r\n  }\r\n  return finalValue;\r\n}\r\n\r\nfunction gemValue(gem, socket, value) {\r\n  var finalValue = 0;\r\n  if (gem.includes(\"Lvl1\")) {\r\n    finalValue += value * socketValue(socket, 1.05);\r\n    finalValue += socketValue(socket, 2);\r\n  }\r\n  if (gem.includes(\"Lvl2\")) {\r\n    finalValue += value * socketValue(socket, 1.7);\r\n    finalValue += socketValue(socket, 8);\r\n  }\r\n  if (gem.includes(\"Lvl3\")) {\r\n    finalValue += value * socketValue(socket, 2.2);\r\n    finalValue += socketValue(socket, 25);\r\n  }\r\n  if (gem.includes(\"Lvl4\")) {\r\n    finalValue += value * socketValue(socket, 6);\r\n    finalValue += socketValue(socket, 72);\r\n  }\r\n  if (gem.includes(\"Lvl5\")) {\r\n    finalValue += value * socketValue(socket, 14);\r\n    finalValue += socketValue(socket, 200);\r\n  }\r\n  if (gem.includes(\"Lvl6\")) {\r\n    finalValue += value * socketValue(socket, 43);\r\n    finalValue += socketValue(socket, 400);\r\n  }\r\n  if (gem.includes(\"Lvl7\")) {\r\n    finalValue += value * socketValue(socket, 1.7);\r\n    finalValue += socketValue(socket, 8);\r\n  }\r\n  if (gem.includes(\"Lvl8\")) {\r\n    finalValue += value * socketValue(socket, 1.7);\r\n    finalValue += socketValue(socket, 8);\r\n  }\r\n  if (gem.includes(\"Lvl9\")) {\r\n    finalValue += value * socketValue(socket, 1.7);\r\n    finalValue += socketValue(socket, 8);\r\n  }\r\n  return Number(finalValue.toFixed(1));\r\n}\r\n\r\nasync function optimize(myNft) {\r\n  console.log(myNft);\r\n  var points = 0;\r\n  var efficiency = 0;\r\n  var luck = 0;\r\n  var comfort = 0;\r\n  var resilience = 0;\r\n  var gemEfficiency = 0;\r\n  var gemLuck = 0;\r\n  var gemComfort = 0;\r\n  var gemResilience = 0;\r\n\r\n  for (var i = 1; i < 5; i++) {\r\n    if (myNft[`socket${i}`].includes(\"efficiency\")) {\r\n      gemEfficiency += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.efficiencyBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"luck\")) {\r\n      gemLuck += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.luckBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"comfort\")) {\r\n      gemComfort += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.comfortBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"resilience\")) {\r\n      gemResilience += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.resilienceBase\r\n      );\r\n    }\r\n  }\r\n\r\n  if (myNft.quality === \"Common\") {\r\n    points = myNft.lvl * 4;\r\n    comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 10);\r\n    points += Number(myNft.comfortBase.toFixed(0)) - 10;\r\n  }\r\n  if (myNft.quality === \"Uncommon\") {\r\n    points = myNft.lvl * 6;\r\n    comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\r\n    points += Number(myNft.comfortBase.toFixed(0)) - 20;\r\n  }\r\n  if (myNft.quality === \"Rare\") {\r\n    points = myNft.lvl * 8;\r\n    comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\r\n    points += Number(myNft.comfortBase.toFixed(0)) - 20;\r\n  }\r\n  if (myNft.quality === \"Epic\") {\r\n    points = myNft.lvl * 10;\r\n    comfort = Math.abs(Number(myNft.comfortBase.toFixed(0)) - 20);\r\n    points += Number(myNft.comfortBase.toFixed(0)) - 20;\r\n  }\r\n  if (myNft.strategy === \"GST\") {\r\n    resilience += Number((points / 6).toFixed(0));\r\n    points -= resilience;\r\n    efficiency += points;\r\n    points -= efficiency;\r\n  }\r\n\r\n  if (myNft.strategy === \"MYSTERY BOX\") {\r\n    var maxLuck = gemLuck + myNft.luckBase + points;\r\n    var average = luckEnergy[getClosestEnergyLuck(myNft.energy, maxLuck)].luck;\r\n    if (average <= gemLuck + myNft.luckBase) {\r\n      // Pas besoin d'attribuer des points en luck\r\n    } else {\r\n      var diff = average - (gemLuck + myNft.luckBase);\r\n      // attribuer diff en points\r\n      luck += diff;\r\n      points -= luck;\r\n    }\r\n    resilience += Number((points / 6).toFixed(0));\r\n    points -= resilience;\r\n    efficiency += points;\r\n    points -= efficiency;\r\n  }\r\n\r\n  if (myNft.strategy === \"HYBRID\") {\r\n    resilience += Number((points / 2 / 6).toFixed(0));\r\n    efficiency += Number((points / 2).toFixed(0));\r\n    points -= resilience;\r\n    points -= efficiency;\r\n    var maxLuck = gemLuck + myNft.luckBase + points;\r\n    var average = luckEnergy[getClosestEnergyLuck(myNft.energy, maxLuck)].luck;\r\n    if (average <= gemLuck + myNft.luckBase) {\r\n      // Pas besoin d'attribuer des points en luck\r\n    } else {\r\n      var diff = average - (gemLuck + myNft.luckBase);\r\n      // attribuer diff en points\r\n      luck += diff;\r\n      points -= luck;\r\n    }\r\n    resilience += Number((points / 6).toFixed(0));\r\n    points -= resilience;\r\n    efficiency += points;\r\n    points -= efficiency;\r\n  }\r\n  const params = {\r\n    lvlOptimized: myNft.lvl,\r\n    efficiencyOptimized: Number(efficiency.toFixed(0)) + gemEfficiency,\r\n    luckOptimized: Number(luck.toFixed(0)) + gemLuck,\r\n    comfortOptimized: Number(comfort.toFixed(0)) + gemComfort,\r\n    resilienceOptimized: Number(resilience.toFixed(0)) + gemResilience,\r\n    gem1Optimized: myNft.gem1,\r\n    gem2Optimized: myNft.gem2,\r\n    gem3Optimized: myNft.gem3,\r\n    gem4Optimized: myNft.gem4,\r\n    id: myNft.id,\r\n  };\r\n  return await updateNft(params, myNft.id);\r\n}\r\n\r\nfunction getMaxMb(myNft) {\r\n  var points = 0;\r\n  var efficiency = 0;\r\n  var luck = 0;\r\n  var comfort = 0;\r\n  var resilience = 0;\r\n  var gemEfficiency = 0;\r\n  var gemLuck = 0;\r\n  var gemComfort = 0;\r\n  var gemResilience = 0;\r\n\r\n  if (myNft.quality === \"Common\") {\r\n    points = myNft.lvl * 4;\r\n    comfort = 10;\r\n    points += Number(myNft.comfortBase.toFixed(0)) - 10;\r\n  }\r\n  if (myNft.quality === \"Uncommon\") {\r\n    points = myNft.lvl * 6;\r\n    comfort = 20;\r\n    points += myNft.comfortBase - 20;\r\n  }\r\n  if (myNft.quality === \"Rare\") {\r\n    points = myNft.lvl * 8;\r\n    comfort = 20;\r\n    points += myNft.comfortBase - 20;\r\n  }\r\n  if (myNft.quality === \"Epic\") {\r\n    points = myNft.lvl * 10;\r\n    comfort = 20;\r\n    points += myNft.comfortBase - 20;\r\n  }\r\n  for (var i = 1; i < 5; i++) {\r\n    if (myNft[`socket${i}`].includes(\"efficiency\")) {\r\n      gemEfficiency += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.efficiencyBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"luck\")) {\r\n      gemLuck += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.luckBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"comfort\")) {\r\n      gemComfort += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.comfortBase\r\n      );\r\n    }\r\n    if (myNft[`socket${i}`].includes(\"resilience\")) {\r\n      gemResilience += gemValue(\r\n        myNft[`gem${i}`],\r\n        myNft[`socket${i}`],\r\n        myNft.resilienceBase\r\n      );\r\n    }\r\n  }\r\n  if (myNft.strategy === \"GST\") {\r\n    points = 0;\r\n  }\r\n  if (myNft.strategy === \"HYBRID\") {\r\n    resilience += Number((points / 2 / 6).toFixed(0));\r\n    efficiency += Number((points / 2).toFixed(0));\r\n    points -= resilience + efficiency;\r\n  }\r\n  var maxLuck = gemLuck + myNft.luckBase + points;\r\n  return getClosestEnergyLuck(myNft.energy, maxLuck) + 1;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}